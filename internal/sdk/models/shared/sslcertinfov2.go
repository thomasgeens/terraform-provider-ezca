// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/thomasgeens/terraform-provider-ezca/internal/sdk/internal/utils"
	"time"
)

type SSLCertInfoV2 struct {
	CertificatePEM        *string           `json:"CertificatePEM,omitempty"`
	Thumbprint            *string           `json:"Thumbprint,omitempty"`
	Caid                  *string           `json:"CAID,omitempty"`
	SubjectName           *string           `json:"SubjectName,omitempty"`
	TemplateID            *string           `json:"TemplateID,omitempty"`
	Revoked               *bool             `json:"Revoked,omitempty"`
	SubjectAlternateNames []SubjectAltValue `json:"SubjectAlternateNames,omitempty"`
	KeyUsages             []string          `json:"KeyUsages,omitempty"`
	EKUs                  []string          `json:"EKUs,omitempty"`
	DateRequested         *time.Time        `json:"DateRequested,omitempty"`
	ExpiryDate            *time.Time        `json:"ExpiryDate,omitempty"`
	CertLocationType      *string           `json:"CertLocationType,omitempty"`
	CertLocation          *string           `json:"CertLocation,omitempty"`
	CAFriendlyName        *string           `json:"CAFriendlyName,omitempty"`
	CertNameAtLocation    *string           `json:"CertNameAtLocation,omitempty"`
	AutoRenew             *bool             `json:"AutoRenew,omitempty"`
	AutoRenewPercentage   *int              `json:"AutoRenewPercentage,omitempty"`
	CertLengthDays        *int              `json:"CertLengthDays,omitempty"`
	CertAppID             *string           `json:"CertAppID,omitempty"`
	CertificateTags       *string           `json:"CertificateTags,omitempty"`
	CanRevoke             *bool             `json:"CanRevoke,omitempty"`
}

func (s SSLCertInfoV2) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SSLCertInfoV2) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SSLCertInfoV2) GetCertificatePEM() *string {
	if o == nil {
		return nil
	}
	return o.CertificatePEM
}

func (o *SSLCertInfoV2) GetThumbprint() *string {
	if o == nil {
		return nil
	}
	return o.Thumbprint
}

func (o *SSLCertInfoV2) GetCaid() *string {
	if o == nil {
		return nil
	}
	return o.Caid
}

func (o *SSLCertInfoV2) GetSubjectName() *string {
	if o == nil {
		return nil
	}
	return o.SubjectName
}

func (o *SSLCertInfoV2) GetTemplateID() *string {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *SSLCertInfoV2) GetRevoked() *bool {
	if o == nil {
		return nil
	}
	return o.Revoked
}

func (o *SSLCertInfoV2) GetSubjectAlternateNames() []SubjectAltValue {
	if o == nil {
		return nil
	}
	return o.SubjectAlternateNames
}

func (o *SSLCertInfoV2) GetKeyUsages() []string {
	if o == nil {
		return nil
	}
	return o.KeyUsages
}

func (o *SSLCertInfoV2) GetEKUs() []string {
	if o == nil {
		return nil
	}
	return o.EKUs
}

func (o *SSLCertInfoV2) GetDateRequested() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateRequested
}

func (o *SSLCertInfoV2) GetExpiryDate() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiryDate
}

func (o *SSLCertInfoV2) GetCertLocationType() *string {
	if o == nil {
		return nil
	}
	return o.CertLocationType
}

func (o *SSLCertInfoV2) GetCertLocation() *string {
	if o == nil {
		return nil
	}
	return o.CertLocation
}

func (o *SSLCertInfoV2) GetCAFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.CAFriendlyName
}

func (o *SSLCertInfoV2) GetCertNameAtLocation() *string {
	if o == nil {
		return nil
	}
	return o.CertNameAtLocation
}

func (o *SSLCertInfoV2) GetAutoRenew() *bool {
	if o == nil {
		return nil
	}
	return o.AutoRenew
}

func (o *SSLCertInfoV2) GetAutoRenewPercentage() *int {
	if o == nil {
		return nil
	}
	return o.AutoRenewPercentage
}

func (o *SSLCertInfoV2) GetCertLengthDays() *int {
	if o == nil {
		return nil
	}
	return o.CertLengthDays
}

func (o *SSLCertInfoV2) GetCertAppID() *string {
	if o == nil {
		return nil
	}
	return o.CertAppID
}

func (o *SSLCertInfoV2) GetCertificateTags() *string {
	if o == nil {
		return nil
	}
	return o.CertificateTags
}

func (o *SSLCertInfoV2) GetCanRevoke() *bool {
	if o == nil {
		return nil
	}
	return o.CanRevoke
}
