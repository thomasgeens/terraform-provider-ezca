// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type TemplateDetailsModel struct {
	TenantID                *string                   `json:"TenantID,omitempty"`
	Caid                    *string                   `json:"CAID,omitempty"`
	CAFriendlyName          *string                   `json:"CAFriendlyName,omitempty"`
	CATemplateType          *string                   `json:"CATemplateType,omitempty"`
	TemplateID              *string                   `json:"TemplateID,omitempty"`
	TemplateName            *string                   `json:"TemplateName,omitempty"`
	DualKeyRequired         *bool                     `json:"DualKeyRequired,omitempty"`
	AllowWildCardDomains    *bool                     `json:"AllowWildCardDomains,omitempty"`
	AllowAllOrgAsRequesters *bool                     `json:"AllowAllOrgAsRequesters,omitempty"`
	KeyUsage                *string                   `json:"KeyUsage,omitempty"`
	MaxCertLifeDays         *int                      `json:"MaxCertLifeDays,omitempty"`
	DomainRestrictions      *string                   `json:"DomainRestrictions,omitempty"`
	ApprovedAADRequesters   []AADObjectModel          `json:"ApprovedAADRequesters,omitempty"`
	Approvers               []AADObjectModel          `json:"Approvers,omitempty"`
	AllowedDomains          []APIResultModel          `json:"AllowedDomains,omitempty"`
	CAKeyType               *string                   `json:"CAKeyType,omitempty"`
	CAHashing               *string                   `json:"CAHashing,omitempty"`
	EKUs                    []string                  `json:"EKUs,omitempty"`
	CustomEKUs              []EKUModel                `json:"CustomEKUs,omitempty"`
	ScepUserName            *string                   `json:"ScepUserName,omitempty"`
	SCEPDynamicChallenge    *bool                     `json:"SCEPDynamicChallenge,omitempty"`
	SCEPStaticChallenge     *bool                     `json:"SCEPStaticChallenge,omitempty"`
	SCEPSelfService         *bool                     `json:"SCEPSelfService,omitempty"`
	SCEPChallengeLength     *int                      `json:"SCEPChallengeLength,omitempty"`
	SCEPSecret              *string                   `json:"SCEPSecret,omitempty"`
	SCEPUserPassword        *string                   `json:"SCEPUserPassword,omitempty"`
	ScepHashingAllowed      []APIResultModel          `json:"scepHashingAllowed,omitempty"`
	SCEPEncryptionAllowed   []APIResultModel          `json:"SCEPEncryptionAllowed,omitempty"`
	SCEPSelfServiceProfiles []SelfServiceProfileModel `json:"SCEPSelfServiceProfiles,omitempty"`
}

func (o *TemplateDetailsModel) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *TemplateDetailsModel) GetCaid() *string {
	if o == nil {
		return nil
	}
	return o.Caid
}

func (o *TemplateDetailsModel) GetCAFriendlyName() *string {
	if o == nil {
		return nil
	}
	return o.CAFriendlyName
}

func (o *TemplateDetailsModel) GetCATemplateType() *string {
	if o == nil {
		return nil
	}
	return o.CATemplateType
}

func (o *TemplateDetailsModel) GetTemplateID() *string {
	if o == nil {
		return nil
	}
	return o.TemplateID
}

func (o *TemplateDetailsModel) GetTemplateName() *string {
	if o == nil {
		return nil
	}
	return o.TemplateName
}

func (o *TemplateDetailsModel) GetDualKeyRequired() *bool {
	if o == nil {
		return nil
	}
	return o.DualKeyRequired
}

func (o *TemplateDetailsModel) GetAllowWildCardDomains() *bool {
	if o == nil {
		return nil
	}
	return o.AllowWildCardDomains
}

func (o *TemplateDetailsModel) GetAllowAllOrgAsRequesters() *bool {
	if o == nil {
		return nil
	}
	return o.AllowAllOrgAsRequesters
}

func (o *TemplateDetailsModel) GetKeyUsage() *string {
	if o == nil {
		return nil
	}
	return o.KeyUsage
}

func (o *TemplateDetailsModel) GetMaxCertLifeDays() *int {
	if o == nil {
		return nil
	}
	return o.MaxCertLifeDays
}

func (o *TemplateDetailsModel) GetDomainRestrictions() *string {
	if o == nil {
		return nil
	}
	return o.DomainRestrictions
}

func (o *TemplateDetailsModel) GetApprovedAADRequesters() []AADObjectModel {
	if o == nil {
		return nil
	}
	return o.ApprovedAADRequesters
}

func (o *TemplateDetailsModel) GetApprovers() []AADObjectModel {
	if o == nil {
		return nil
	}
	return o.Approvers
}

func (o *TemplateDetailsModel) GetAllowedDomains() []APIResultModel {
	if o == nil {
		return nil
	}
	return o.AllowedDomains
}

func (o *TemplateDetailsModel) GetCAKeyType() *string {
	if o == nil {
		return nil
	}
	return o.CAKeyType
}

func (o *TemplateDetailsModel) GetCAHashing() *string {
	if o == nil {
		return nil
	}
	return o.CAHashing
}

func (o *TemplateDetailsModel) GetEKUs() []string {
	if o == nil {
		return nil
	}
	return o.EKUs
}

func (o *TemplateDetailsModel) GetCustomEKUs() []EKUModel {
	if o == nil {
		return nil
	}
	return o.CustomEKUs
}

func (o *TemplateDetailsModel) GetScepUserName() *string {
	if o == nil {
		return nil
	}
	return o.ScepUserName
}

func (o *TemplateDetailsModel) GetSCEPDynamicChallenge() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPDynamicChallenge
}

func (o *TemplateDetailsModel) GetSCEPStaticChallenge() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPStaticChallenge
}

func (o *TemplateDetailsModel) GetSCEPSelfService() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPSelfService
}

func (o *TemplateDetailsModel) GetSCEPChallengeLength() *int {
	if o == nil {
		return nil
	}
	return o.SCEPChallengeLength
}

func (o *TemplateDetailsModel) GetSCEPSecret() *string {
	if o == nil {
		return nil
	}
	return o.SCEPSecret
}

func (o *TemplateDetailsModel) GetSCEPUserPassword() *string {
	if o == nil {
		return nil
	}
	return o.SCEPUserPassword
}

func (o *TemplateDetailsModel) GetScepHashingAllowed() []APIResultModel {
	if o == nil {
		return nil
	}
	return o.ScepHashingAllowed
}

func (o *TemplateDetailsModel) GetSCEPEncryptionAllowed() []APIResultModel {
	if o == nil {
		return nil
	}
	return o.SCEPEncryptionAllowed
}

func (o *TemplateDetailsModel) GetSCEPSelfServiceProfiles() []SelfServiceProfileModel {
	if o == nil {
		return nil
	}
	return o.SCEPSelfServiceProfiles
}
