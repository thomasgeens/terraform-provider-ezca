// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type CACertTemplateReqModel struct {
	CATemplateType          *string          `json:"CATemplateType,omitempty"`
	CATemplateName          *string          `json:"CATemplateName,omitempty"`
	DualKeyRequired         *bool            `json:"DualKeyRequired,omitempty"`
	Approvers               []AADObjectModel `json:"Approvers,omitempty"`
	AllowWildCardDomains    *bool            `json:"AllowWildCardDomains,omitempty"`
	AllowAllOrgAsRequesters *bool            `json:"AllowAllOrgAsRequesters,omitempty"`
	ApprovedAADRequesters   []AADObjectModel `json:"ApprovedAADRequesters,omitempty"`
	KeyUsage                []string         `json:"KeyUsage,omitempty"`
	EKUs                    []EKUModel       `json:"EKUs,omitempty"`
	CustomEKUs              []EKUModel       `json:"CustomEKUs,omitempty"`
	MaxCertLifeDays         *int             `json:"MaxCertLifeDays,omitempty"`
	DomainRestrictions      *string          `json:"DomainRestrictions,omitempty"`
	EZSCRequestor           *string          `json:"EZSCRequestor,omitempty"`
	AllowedDomains          []string         `json:"AllowedDomains,omitempty"`
	SCEPDynamicChallenge    *bool            `json:"SCEPDynamicChallenge,omitempty"`
	SCEPStaticChallenge     *bool            `json:"SCEPStaticChallenge,omitempty"`
	SCEPSelfService         *bool            `json:"SCEPSelfService,omitempty"`
	ScepUserName            *string          `json:"ScepUserName,omitempty"`
	SCEPUserPassword        *string          `json:"SCEPUserPassword,omitempty"`
	SCEPStaticSecret        *string          `json:"SCEPStaticSecret,omitempty"`
	SCEPChallengeLength     *int             `json:"SCEPChallengeLength,omitempty"`
}

func (o *CACertTemplateReqModel) GetCATemplateType() *string {
	if o == nil {
		return nil
	}
	return o.CATemplateType
}

func (o *CACertTemplateReqModel) GetCATemplateName() *string {
	if o == nil {
		return nil
	}
	return o.CATemplateName
}

func (o *CACertTemplateReqModel) GetDualKeyRequired() *bool {
	if o == nil {
		return nil
	}
	return o.DualKeyRequired
}

func (o *CACertTemplateReqModel) GetApprovers() []AADObjectModel {
	if o == nil {
		return nil
	}
	return o.Approvers
}

func (o *CACertTemplateReqModel) GetAllowWildCardDomains() *bool {
	if o == nil {
		return nil
	}
	return o.AllowWildCardDomains
}

func (o *CACertTemplateReqModel) GetAllowAllOrgAsRequesters() *bool {
	if o == nil {
		return nil
	}
	return o.AllowAllOrgAsRequesters
}

func (o *CACertTemplateReqModel) GetApprovedAADRequesters() []AADObjectModel {
	if o == nil {
		return nil
	}
	return o.ApprovedAADRequesters
}

func (o *CACertTemplateReqModel) GetKeyUsage() []string {
	if o == nil {
		return nil
	}
	return o.KeyUsage
}

func (o *CACertTemplateReqModel) GetEKUs() []EKUModel {
	if o == nil {
		return nil
	}
	return o.EKUs
}

func (o *CACertTemplateReqModel) GetCustomEKUs() []EKUModel {
	if o == nil {
		return nil
	}
	return o.CustomEKUs
}

func (o *CACertTemplateReqModel) GetMaxCertLifeDays() *int {
	if o == nil {
		return nil
	}
	return o.MaxCertLifeDays
}

func (o *CACertTemplateReqModel) GetDomainRestrictions() *string {
	if o == nil {
		return nil
	}
	return o.DomainRestrictions
}

func (o *CACertTemplateReqModel) GetEZSCRequestor() *string {
	if o == nil {
		return nil
	}
	return o.EZSCRequestor
}

func (o *CACertTemplateReqModel) GetAllowedDomains() []string {
	if o == nil {
		return nil
	}
	return o.AllowedDomains
}

func (o *CACertTemplateReqModel) GetSCEPDynamicChallenge() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPDynamicChallenge
}

func (o *CACertTemplateReqModel) GetSCEPStaticChallenge() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPStaticChallenge
}

func (o *CACertTemplateReqModel) GetSCEPSelfService() *bool {
	if o == nil {
		return nil
	}
	return o.SCEPSelfService
}

func (o *CACertTemplateReqModel) GetScepUserName() *string {
	if o == nil {
		return nil
	}
	return o.ScepUserName
}

func (o *CACertTemplateReqModel) GetSCEPUserPassword() *string {
	if o == nil {
		return nil
	}
	return o.SCEPUserPassword
}

func (o *CACertTemplateReqModel) GetSCEPStaticSecret() *string {
	if o == nil {
		return nil
	}
	return o.SCEPStaticSecret
}

func (o *CACertTemplateReqModel) GetSCEPChallengeLength() *int {
	if o == nil {
		return nil
	}
	return o.SCEPChallengeLength
}
